<% content_for :left_side do %>

  <script>
    showListsDropdown = false
  </script>

  <div class="p-6 bg-gray-100">
    <div class="relative">

      <div class="border-2 border-gray-300 w-full bg-white rounded px-4 py-2 hover:bg-gray-100 cursor-pointer flex justify-between" :click="showListsDropdown = !showListsDropdown" >
        <span>
          <% if @active_list %>
            <%= @active_list.name %>
          <% else %>
            Select List
          <% end %>
        </span>
        <%= inline_svg("heroicons/chevron-down.svg",class:"w-4") %>
      </div>

      <div class="relative">
        <div class="transition ease-out duration-100 shadow opacity-0 absolute top-2 right-0 left-0 bg-white" :class="showListsDropdown ? 'transform opacity-100 scale-100' : 'transform opacity-0 scale-95 pointer-events-none' " >
          <% @lists.each do |list| %>
            <a class="px-4 py-2 hover:bg-gray-100 cursor-pointer block" href="<%= recipes_path(list_id:list.id) %>" >
              <%= list.name %>
            </a>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <a href="<%= recipes_path(list_id:@active_list.id) %>" class="block px-3 py-3 hover:text-white <%= params[:recipe].blank? ? 'bg-gray-900 text-white' : 'hover:bg-gray-800' %>">
    About
  </a>
  <div class="flex justify-between items-center pr-4">
    <div class="px-3 py-3 text-gray-900 text-xl font-bold">
      Recipes
    </div>
    <% if admin_user_signed_in? %>
      <button class="text-sm flex items-center" hx-get="<%= new_recipe_path(@active_list.id) %>" hx-target="#main-modal-content" :click="showingModal = true" >
        <%= inline_svg_tag("heroicons/plus.svg",class:"w-4") %>
        Add Recipe
      </button>
    <% end %>
  </div>
  <% @recipes.each do |recipe|  %>
    <a href="<%= recipes_path(recipe:recipe.id,list_id:params[:list_id]) %>" class="block px-3 py-3 hover:text-white <%= params[:recipe] == recipe.id.to_s ? 'bg-gray-900 text-white' : 'hover:bg-gray-800' %>">
      <%= recipe.title_dislay %>
    </a>
  <% end %>
<% end %>

<% if @recipe %>
  <div class="grid grid-cols-3 h-full">
    <div class="p-8 col-span-2">
      <div id="snippet-content">
        <div class="font-semibold text-2xl mb-2 flex justify-between border-b border-gray-100 mb-3 pb-4">
          <div class="flex text-base gap-x-2" >
            <% if @recipe.has_grouped_recipes? %>
              <% @parent_recipe = @recipe.parent_recipe_id.present? ? @recipe.parent_recipe : @recipe %>
              <a class="rounded-full px-3 py-1 <%= params[:recipe] == @parent_recipe.id.to_s ? 'bg-gray-900 text-white' : 'hover:bg-gray-100 ' %>" href="<%= recipes_path(list_id:params[:list_id], recipe:@parent_recipe.id) %>">
                <%= @parent_recipe.title_dislay %>
              </a>
              <% @parent_recipe.child_recipes.each do |recipe| %>
                <a href="<%= recipes_path(list_id:params[:list_id], recipe:recipe.id) %>" class="rounded-full px-3 py-1 <%= params[:recipe] == recipe.id.to_s ? 'bg-gray-900 text-white' : 'hover:bg-gray-100 ' %>">
                  <%= recipe.title_dislay %>
                </a>
              <% end %>
            <% end %>
          </div>
        </div>
        <% if @recipe.css_content.present? %>
          <style>
            <%= @recipe.css_content.html_safe %>
          </style>
        <% end %>
        <div id="example" class="pt-4"> 
          <div class="bg-indigo-600 flex justify-center items-center p-10 rounded">
            <%= @recipe&.content&.html_safe %>
          </div>
        </div>

        <script>
          showCode = true
          displayMode = 'full_recipe'
        </script>

        <%- render partial: "recipes/diff_section" %>
        <%= render partial: "recipes/code_section" %>

      </div>
    </div>

    <div class="col-span-1 flex flex-col h-full p-5">

      <% if @recipe.description %>

        <h2 class="font-semibold text-lg mb-2 flex justify-between border-b border-gray-100 mb-3 py-4">
          Description
        </h2>
        <div class="mb-3 format-text">
          <%= Utilities.markdown_to_html(@recipe.description).html_safe %>
        </div>
      <% end %>

      <script>
        showSetup = false
      </script>

      <div class="accordion rounded-md overflow-hidden border border-gray-200 mb-4">
        <section class="grid transition-all border-gray-200 border-b hover:bg-gray-50" :class="showSetup ? 'active' : ''" >
          <a :click="showSetup = !showSetup" class="cursor-pointer font-bold p-4 flex justify-between">
            Setup
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-gray-800">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
            </svg>
          </a>
          <div class="overflow-hidden">
            <div class="p-4 pt-0">
              <div class="py-3">
                Make sure you've loaded <%= @recipe.libs.map(&:name).to_sentence  %>
              </div>
              <div id="code" class="html" >
                <pre class="rounded-lg" style="background-color:#002451;white-space:normal">
                <code class="rounded language-html" style="white-space:nowrap">
                  <% @recipe.libs.each do |lib| %>
                    <% if lib.script_tag.present? %>
<%= lib.script_tag  %>
<br/>
                    <% end %>
                  <% end %>
                </code>
                </pre>
              </div>
            </div>
          </div>
        </section>
      </div>

      <div class="accordion rounded-md overflow-hidden border border-gray-200 mb-4">
        <section class="grid transition-all border-gray-200 border-b hover:bg-gray-50" :class="showRemix ? 'active' : ''" >
          <a :click="showRemix = !showRemix" class="cursor-pointer font-bold p-4 flex justify-between">
            Remix
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-gray-800">
              <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
            </svg>
          </a>
          <div class="overflow-hidden">
            <div class="p-4 pt-0">
              <form method="post" action="<%= update_recipe_path(@active_list.id,@recipe.id) %>">
                <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>" />

                <label class="no-style text-sm">
                  What would you like to do?
                </label>
                <textarea placeholder="E.g. make the borders thicker and use a mono font" ></textarea>

                <input type="submit" value="Preview">
              </form>
            </div>
          </div>
        </section>
      </div>

      <% if admin_user_signed_in? %>
        <div class="accordion rounded-md overflow-hidden border border-gray-200">
          <section class="grid transition-all border-gray-200 border-b hover:bg-gray-50" :class="showEditor ? 'active' : ''" >
            <a :click="showEditor = !showEditor" class="cursor-pointer font-bold p-4 flex justify-between">
              Edit
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5 text-gray-800">
                <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
              </svg>
            </a>
            <div class="overflow-hidden">
              <div class="p-4 pt-0">
                <form method="post" action="<%= update_recipe_path(@active_list.id,@recipe.id) %>">
                  <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>" />


                  <textarea id="recipe_constent" name="recipe[content]">
<%= @recipe.content %>
                  </textarea>
                  <input type="submit" value="Preview">
                </form>
              </div>
            </div>
          </section>
        </div>
      <% end %>


    </div>
  </div>

<% else %>

  <div class="grid grid-cols-2 h-full format-text">
    <div class="p-8">
      <%= Utilities.markdown_to_html(@active_list.description).html_safe %>
    </div>
    <% if admin_user_signed_in? %>
      <form method="post" class="o-style p-8" action="<%= update_list_path(@active_list.id) %>" >
        <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>" />
      
        <textarea id="list_description_textarea" name="list[description]" class=" w-full text-lg" style="height: 85vh" >
<%= @active_list.description %>
        </textarea>
        <input type="submit" />
      </form>

      <script>
        const easymde = new EasyMDE({
          element: document.getElementById('list_description_textarea'),
          spellChecker: false
        });
      </script>
    <% end %>
  </div>

<% end %>

<script>
  document.addEventListener("DOMContentLoaded", function() {

    var allEditors = []; // Initialize an empty array to hold all editors

    // Initialize the first, editable instance
    var editor = CodeMirror.fromTextArea(document.getElementById('full_recipe_content'), {
      mode: "xml",
      htmlMode: true,
      lineNumbers: true,
      theme: "material-palenight"
      // Add other options here as needed.
    });
    allEditors.push(editor); // Add the main editor to the array

    // Initialize additional read-only instances
    var readOnlyEditors = ['markup_only_content','tailwind_only_content','mini_only_content'].map(function(id) {
      var readOnlyEditor = CodeMirror.fromTextArea(document.getElementById(id), {
        mode: "xml",
        htmlMode: true,
        lineNumbers: true,
        theme: "material-palenight",
        readOnly: true // This makes the editor read-only
      });
      allEditors.push(readOnlyEditor); // Add each read-only editor to the array
      return readOnlyEditor;
    });

    // Global access to refresh all editors
    window.refreshEditors = function() {
      setTimeout(function() { 
        allEditors.forEach(function(editor) {
          editor.refresh();
        });
      }, 100);
    };

    // Make allEditors globally accessible if needed
    window.allEditors = allEditors;
  });

</script>

